VideoOutput {
    id: output_%1
    anchors.left: %2
    anchors.top: %3
    width: parent.width/%4
    height: parent.height/%5
    source: videoProducer_%1

    ButtonDefault {
        id: backBtn_%1
        focus: %6

        x: output_%1.contentRect.x + output_%1.contentRect.width - width - base_margins*2
        y: output_%1.contentRect.y + height + base_margins

        class_name: "outline small"
        icon: FontAwesome.icons.fa_arrow_left
        KeyNavigation.down: zoomBtn_%1
        %7

        onClicked: {
            wnd.showStartScreen();
            mainView.state = "showTilesView"
        }

        Keys.onEnterPressed: {
            backBtn_%1.clicked()
        }
    }

    ButtonDefault {
        id: zoomBtn_%1

        x: output_%1.contentRect.x + output_%1.contentRect.width - width - base_margins*2
        y: output_%1.contentRect.y + height*2 + base_margins*2

        class_name: "outline small"
        icon: FontAwesome.icons.fa_search
        KeyNavigation.down: exitBtn_%1
        %8

        onClicked: {
            wnd.hiResUrl = videoProducer_%1.hiResUrl
            wnd.runHiRes();
        }

        Keys.onEnterPressed: {
            zoomBtn_%1.clicked()
        }
    }

    ButtonDefault {
        id: exitBtn_%1

        x: output_%1.contentRect.x + output_%1.contentRect.width - width - base_margins*2
        y: output_%1.contentRect.y + height*3 + base_margins*3

        class_name: "outline small"
        icon: FontAwesome.icons.fa_sign_out
        %9
        %10

        onClicked: {
            wnd.close()
        }

        Keys.onEnterPressed: {
            exitBtn_%1.clicked()
        }
    }

    Keys.onPressed: {
        if (event.key === Qt.Key_Escape || event.key === Qt.Key_Back) {
            event.accepted = true
            wnd.showStartScreen();
            mainView.state = "showTilesView"
        }
    }

    onVisibleChanged: {
        source.updateTimer(visible)
    }
}
